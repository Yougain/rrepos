#!/bin/bash

function ask_yes_no {
	local tty
	if [ -t 2 ];then
		tty="`readlink -f /proc/self/fd/2`"
	else
		return 1
	fi
	if [ -n "$1" ];then
        echo -n "$1 "
        echo -n "[y/n]: "
	fi
	local ANS
	while true; do
		read ANS < $tty
		case $ANS in
			[Yy]*)
				return 0
				;;  
			[Nn]*)
				return 1
				;;
			*)
				;;
		esac
	done
}


[ "`id -ru`" != "0" ] && die "Please use sudo."

if [ -z "$1" ]; then
    echo "ERROR:No version argument given."
    exit 1
fi

SCRIPT_PATH=$(readlink -f "$0")
SCRIPT_DIR=$(dirname "$SCRIPT_PATH")
REPOS_DIR=$(dirname "$SCRIPT_DIR")


VER="$1"


function _rpm(){
    rpm -ivh --nodeps $REPOS_DIR/rpms/$1-$VER.$2.rpm
}

function x86_64(){
    _rpm $1 x86_64
}

function noarch(){
    _rpm $1 noarch
}


if ask_yes_no "Uninstall current ruby and install new ruby.";then
    GEMS=(`gem list | awk '{print $1}'`)
    rpm -e `rpm -qa | grep ruby`
    rm -rf `find /usr -type d -name gems`
    for i in ruby-libs ruby ruby-devel rubygem-psych ruby-bundled-gems rubygem-io-console rubygem-json rubygem-racc rubygem-bigdecimal; do
        x86_64 $i
    done
    for i in rubygems ruby-default-gems rubygem-rdoc ruby-doc rubygem-irb rubygem-bundler; then
        noarch $i
    done
    NEW_DEF_GEMS=(`gem list | awk '{print $1}'`)
    GEMS_TO_INST=()
    for item in "${GEMS[@]}"; do
        found=
        for ni in "${NEW_DEF_GEMS[@]}"; do
            if [ "$ni" = "$item" ]; then
                found=1
                break
            fi
        done
        if [ -z "$found" ];then
            GEMS_TO_INST+=("$item")
        fi
    done
    gem install -y ${GEMS_TO_INST[@]}
fi
